2024-06-20 13:01:44,164 - root - INFO - 创建日志文件...
2024-06-20 13:01:44,166 - root - INFO - 创建 Model 对象完成...
2024-06-20 13:01:44,171 - root - INFO - 正在执行 preprocess() 函数...
2024-06-20 13:01:44,174 - root - INFO - 模式=unsupervised
2024-06-20 13:01:44,176 - root - INFO - 聚类方法=louvain
2024-06-20 13:01:44,179 - root - INFO - 分辨率=3.0
2024-06-20 13:01:44,180 - root - INFO - 批次键=BATCH
2024-06-20 13:01:44,182 - root - INFO - Normalize counts per cell(sum=10000.0)
2024-06-20 13:01:45,248 - root - INFO - Log1p data
2024-06-20 13:01:46,798 - root - INFO - Select HVG(n_top_genes=1000)
2024-06-20 13:01:51,750 - root - INFO - Scale batch(scale_value=10.0)
2024-06-20 13:01:54,599 - root - INFO - Calculate PCA(n_comps=100)
2024-06-20 13:02:38,485 - root - INFO - Apply louvain clustring(resolution=3.0) initization
2024-06-20 13:02:38,488 - root - INFO - Number of Cluster =28
2024-06-20 13:02:38,492 - root - INFO - clusters=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
2024-06-20 13:02:38,496 - root - INFO - 预处理数据集完成。
2024-06-20 13:02:38,579 - root - INFO - K_in=6, K_bw=12
2024-06-20 13:02:38,581 - root - INFO - 开始计算 KNN 和 MNN 以获取簇之间的相似性。
2024-06-20 13:02:38,584 - root - INFO - 使用近似方法计算每个批次内的 KNN 对...
2024-06-20 13:02:38,599 - root - INFO - Calculate KNN pair intra batch...........
2024-06-20 13:02:38,601 - root - INFO - K=6
2024-06-20 13:02:38,603 - root - INFO - metric=cosine
2024-06-20 13:02:38,604 - root - INFO - Processing datasets: (0, 0) = ('Batch1', 'Batch1')
2024-06-20 13:02:39,107 - root - INFO - There are (42982) KNN pairs when processing (0, 0)=('Batch1', 'Batch1')
2024-06-20 13:02:39,109 - root - INFO - Processing datasets: (1, 1) = ('Batch2', 'Batch2')
2024-06-20 13:02:39,631 - root - INFO - There are (43868) KNN pairs when processing (1, 1)=('Batch2', 'Batch2')
2024-06-20 13:02:39,633 - root - INFO - Processing datasets: (2, 2) = ('Batch3', 'Batch3')
2024-06-20 13:02:40,155 - root - INFO - There are (43076) KNN pairs when processing (2, 2)=('Batch3', 'Batch3')
2024-06-20 13:02:40,157 - root - INFO - Processing datasets: (3, 3) = ('Batch4', 'Batch4')
2024-06-20 13:02:40,701 - root - INFO - There are (43000) KNN pairs when processing (3, 3)=('Batch4', 'Batch4')
2024-06-20 13:02:40,703 - root - INFO - BDACL finds (172926) KNN pairs in dataset finally
2024-06-20 13:02:41,048 - root - INFO - 使用近似方法计算批次之间的 MNN 对...
2024-06-20 13:02:41,061 - root - INFO - Calculate MNN pair inter batch...........
2024-06-20 13:02:41,063 - root - INFO - K=12
2024-06-20 13:02:41,065 - root - INFO - metric=cosine
2024-06-20 13:02:41,067 - root - INFO - Processing datasets: (0, 1) = ('Batch1', 'Batch2')
2024-06-20 13:02:41,627 - root - INFO - There are (16476) MNN pairs when processing (0, 1)=('Batch1', 'Batch2')
2024-06-20 13:02:41,628 - root - INFO - Processing datasets: (0, 2) = ('Batch1', 'Batch3')
2024-06-20 13:02:42,162 - root - INFO - There are (15598) MNN pairs when processing (0, 2)=('Batch1', 'Batch3')
2024-06-20 13:02:42,163 - root - INFO - Processing datasets: (0, 3) = ('Batch1', 'Batch4')
2024-06-20 13:02:42,734 - root - INFO - There are (13314) MNN pairs when processing (0, 3)=('Batch1', 'Batch4')
2024-06-20 13:02:42,735 - root - INFO - Processing datasets: (1, 2) = ('Batch2', 'Batch3')
2024-06-20 13:02:43,327 - root - INFO - There are (16776) MNN pairs when processing (1, 2)=('Batch2', 'Batch3')
2024-06-20 13:02:43,329 - root - INFO - Processing datasets: (1, 3) = ('Batch2', 'Batch4')
2024-06-20 13:02:43,873 - root - INFO - There are (16768) MNN pairs when processing (1, 3)=('Batch2', 'Batch4')
2024-06-20 13:02:43,875 - root - INFO - Processing datasets: (2, 3) = ('Batch3', 'Batch4')
2024-06-20 13:02:44,451 - root - INFO - There are (14278) MNN pairs when processing (2, 3)=('Batch3', 'Batch4')
2024-06-20 13:02:44,453 - root - INFO - BDACL finds (93210) MNN pairs in dataset finally
2024-06-20 13:02:44,724 - root - INFO - 查找所有最近邻居完成。
2024-06-20 13:02:44,726 - root - INFO - 计算簇之间的相似性矩阵。
2024-06-20 13:02:44,940 - root - INFO - delete inner edge which link same cluster
2024-06-20 13:02:44,943 - root - INFO - 688 knn pair in batch link different cluster
2024-06-20 13:02:45,065 - root - INFO - delete inner edge which link same cluster
2024-06-20 13:02:45,067 - root - INFO - 93210 mnn pair in batch link different cluster
2024-06-20 13:02:45,068 - root - INFO - ===================================================================================
2024-06-20 13:02:45,070 - root - INFO - NN pair ratio(number of MNN pairs/number of KNN pairs)=135.4796511627907
2024-06-20 13:02:45,071 - root - INFO - ===================================================================================
2024-06-20 13:02:45,077 - root - INFO - 将相似性矩阵保存到文件中...
2024-06-20 13:02:45,083 - root - INFO - 将 nn 配对矩阵保存到文件中。
2024-06-20 13:02:45,087 - root - INFO - 完成相似性矩阵计算。
2024-06-20 13:02:45,119 - root - INFO - expect_num_cluster为None，使用特征值差距来估计细胞类型......的数量 
2024-06-20 13:02:46,074 - root - INFO - 最优簇数是 [ 4  5  8 13 19]
2024-06-20 13:02:46,076 - root - INFO - BDACL merge cluster with rule2....
2024-06-20 13:02:46,080 - root - INFO - merge_rule2....
2024-06-20 13:02:46,530 - root - INFO - merging cluster set:[{0, 2, 10, 16, 23, 24, 25, 26, 27}, {1, 3, 4, 18, 19}, {5, 6, 7, 9, 13, 14, 22}, {8, 11, 12, 15, 17, 20, 21}]
2024-06-20 13:02:46,533 - root - INFO - 为BDACL培训构建嵌入网络
2024-06-20 13:02:47,272 - root - INFO - EmbeddingNet(
  (actn): ReLU()
  (fc): Sequential(
    (0): Linear(in_features=1000, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=32, bias=True)
  )
)
2024-06-20 13:02:47,278 - root - INFO - 构建嵌入网络完成…
2024-06-20 13:02:47,286 - root - INFO - train BDACL(expect_num_cluster=4) with Embedding Net
2024-06-20 13:02:47,292 - root - INFO - expect_num_cluster=4
2024-06-20 13:02:47,299 - root - INFO - 利用CPU训练模型
2024-06-20 13:02:47,752 - root - INFO - not use earlystopping!!!!
2024-06-20 13:02:53,207 - root - INFO - epoch=1,loss=229.92
2024-06-20 13:02:55,057 - root - INFO - epoch=2,loss=8.06
2024-06-20 13:02:56,786 - root - INFO - epoch=3,loss=3.32
2024-06-20 13:02:58,594 - root - INFO - epoch=4,loss=1.3
2024-06-20 13:03:00,422 - root - INFO - epoch=5,loss=0.11
2024-06-20 13:03:02,263 - root - INFO - epoch=6,loss=0.0
2024-06-20 13:03:04,174 - root - INFO - epoch=7,loss=0.05
2024-06-20 13:03:06,433 - root - INFO - epoch=8,loss=0.0
2024-06-20 13:03:08,255 - root - INFO - epoch=9,loss=0.48
2024-06-20 13:03:09,920 - root - INFO - epoch=10,loss=1.18
2024-06-20 13:03:11,578 - root - INFO - epoch=11,loss=0.27
2024-06-20 13:03:13,289 - root - INFO - epoch=12,loss=0.47
2024-06-20 13:03:14,947 - root - INFO - epoch=13,loss=0.06
2024-06-20 13:03:16,571 - root - INFO - epoch=14,loss=0.22
2024-06-20 13:03:18,242 - root - INFO - epoch=15,loss=0.09
2024-06-20 13:03:19,995 - root - INFO - epoch=16,loss=0.51
2024-06-20 13:03:21,686 - root - INFO - epoch=17,loss=0.04
2024-06-20 13:03:23,363 - root - INFO - epoch=18,loss=0.11
2024-06-20 13:03:24,979 - root - INFO - epoch=19,loss=0.09
2024-06-20 13:03:26,593 - root - INFO - epoch=20,loss=0.01
2024-06-20 13:03:28,496 - root - INFO - epoch=21,loss=0.0
2024-06-20 13:03:30,383 - root - INFO - epoch=22,loss=0.46
2024-06-20 13:03:32,251 - root - INFO - epoch=23,loss=0.29
2024-06-20 13:03:34,080 - root - INFO - epoch=24,loss=0.06
2024-06-20 13:03:35,838 - root - INFO - epoch=25,loss=0.04
2024-06-20 13:03:37,621 - root - INFO - epoch=26,loss=0.02
2024-06-20 13:03:39,400 - root - INFO - epoch=27,loss=0.0
2024-06-20 13:03:41,393 - root - INFO - epoch=28,loss=0.0
2024-06-20 13:03:44,141 - root - INFO - epoch=29,loss=0.0
2024-06-20 13:03:46,610 - root - INFO - epoch=30,loss=0.06
2024-06-20 13:03:48,491 - root - INFO - epoch=31,loss=0.03
2024-06-20 13:03:50,380 - root - INFO - epoch=32,loss=0.0
2024-06-20 13:03:52,592 - root - INFO - epoch=33,loss=0.0
2024-06-20 13:03:54,585 - root - INFO - epoch=34,loss=0.4
2024-06-20 13:03:56,449 - root - INFO - epoch=35,loss=0.01
2024-06-20 13:03:58,194 - root - INFO - epoch=36,loss=0.81
2024-06-20 13:03:59,865 - root - INFO - epoch=37,loss=0.23
2024-06-20 13:04:01,485 - root - INFO - epoch=38,loss=0.15
2024-06-20 13:04:03,145 - root - INFO - epoch=39,loss=0.01
2024-06-20 13:04:04,784 - root - INFO - epoch=40,loss=0.01
2024-06-20 13:04:06,434 - root - INFO - epoch=41,loss=0.02
2024-06-20 13:04:08,167 - root - INFO - epoch=42,loss=0.0
2024-06-20 13:04:10,275 - root - INFO - epoch=43,loss=0.0
2024-06-20 13:04:12,918 - root - INFO - epoch=44,loss=0.0
2024-06-20 13:04:15,779 - root - INFO - epoch=45,loss=0.0
2024-06-20 13:04:18,570 - root - INFO - epoch=46,loss=0.0
2024-06-20 13:04:21,400 - root - INFO - epoch=47,loss=0.0
2024-06-20 13:04:24,248 - root - INFO - epoch=48,loss=0.0
2024-06-20 13:04:27,026 - root - INFO - epoch=49,loss=0.0
2024-06-20 13:04:29,808 - root - INFO - epoch=50,loss=0.0
2024-06-20 13:04:32,164 - root - INFO - epoch=51,loss=0.06
2024-06-20 13:04:33,957 - root - INFO - epoch=52,loss=0.0
2024-06-20 13:04:35,781 - root - INFO - epoch=53,loss=0.0
2024-06-20 13:04:37,844 - root - INFO - epoch=54,loss=0.02
2024-06-20 13:04:39,512 - root - INFO - epoch=55,loss=0.26
2024-06-20 13:04:41,163 - root - INFO - epoch=56,loss=0.02
2024-06-20 13:04:42,893 - root - INFO - epoch=57,loss=0.02
2024-06-20 13:04:44,812 - root - INFO - epoch=58,loss=0.0
2024-06-20 13:04:47,291 - root - INFO - epoch=59,loss=0.0
2024-06-20 13:04:50,262 - root - INFO - epoch=60,loss=0.0
2024-06-20 13:04:53,341 - root - INFO - epoch=61,loss=0.0
2024-06-20 13:04:55,912 - root - INFO - epoch=62,loss=0.01
2024-06-20 13:04:57,865 - root - INFO - epoch=63,loss=0.2
2024-06-20 13:04:59,627 - root - INFO - epoch=64,loss=0.0
2024-06-20 13:05:01,394 - root - INFO - epoch=65,loss=0.0
2024-06-20 13:05:03,137 - root - INFO - epoch=66,loss=0.02
2024-06-20 13:05:04,893 - root - INFO - epoch=67,loss=0.14
2024-06-20 13:05:06,638 - root - INFO - epoch=68,loss=0.0
2024-06-20 13:05:08,835 - root - INFO - epoch=69,loss=0.0
2024-06-20 13:05:11,754 - root - INFO - epoch=70,loss=0.0
2024-06-20 13:05:14,169 - root - INFO - epoch=71,loss=0.19
2024-06-20 13:05:16,178 - root - INFO - epoch=72,loss=0.0
2024-06-20 13:05:18,147 - root - INFO - epoch=73,loss=0.0
2024-06-20 13:05:20,768 - root - INFO - epoch=74,loss=0.0
2024-06-20 13:05:23,158 - root - INFO - epoch=75,loss=0.02
2024-06-20 13:05:25,154 - root - INFO - epoch=76,loss=0.08
2024-06-20 13:05:27,009 - root - INFO - epoch=77,loss=0.0
2024-06-20 13:05:28,960 - root - INFO - epoch=78,loss=0.03
2024-06-20 13:05:30,845 - root - INFO - epoch=79,loss=0.07
2024-06-20 13:05:32,657 - root - INFO - epoch=80,loss=0.0
2024-06-20 13:05:34,615 - root - INFO - epoch=81,loss=0.04
2024-06-20 13:05:36,358 - root - INFO - epoch=82,loss=0.0
2024-06-20 13:05:38,035 - root - INFO - epoch=83,loss=0.04
2024-06-20 13:05:40,207 - root - INFO - epoch=84,loss=0.0
2024-06-20 13:05:42,475 - root - INFO - epoch=85,loss=0.0
2024-06-20 13:05:45,352 - root - INFO - epoch=86,loss=0.0
2024-06-20 13:05:48,319 - root - INFO - epoch=87,loss=0.0
2024-06-20 13:05:50,679 - root - INFO - epoch=88,loss=0.01
2024-06-20 13:05:52,929 - root - INFO - epoch=89,loss=0.0
2024-06-20 13:05:55,026 - root - INFO - epoch=90,loss=0.01
2024-06-20 13:05:57,316 - root - INFO - epoch=91,loss=0.0
2024-06-20 13:05:59,587 - root - INFO - epoch=92,loss=0.0
2024-06-20 13:06:02,498 - root - INFO - epoch=93,loss=0.0
2024-06-20 13:06:05,081 - root - INFO - epoch=94,loss=0.02
2024-06-20 13:06:07,079 - root - INFO - epoch=95,loss=0.02
2024-06-20 13:06:09,126 - root - INFO - epoch=96,loss=0.0
2024-06-20 13:06:11,154 - root - INFO - epoch=97,loss=0.01
2024-06-20 13:06:13,340 - root - INFO - epoch=98,loss=0.01
2024-06-20 13:06:15,234 - root - INFO - epoch=99,loss=0.0
2024-06-20 13:06:17,328 - root - INFO - epoch=100,loss=0.0
2024-06-20 13:06:17,330 - root - INFO - BDACL training done....
2024-06-20 13:06:17,332 - root - INFO - extract embedding for dataset with trained network
