2024-06-13 16:27:57,284 - root - INFO - 创建日志文件...
2024-06-13 16:27:57,286 - root - INFO - 创建 Model 对象完成...
2024-06-13 16:27:57,308 - root - INFO - 创建日志文件...
2024-06-13 16:27:57,311 - root - INFO - 创建 Model 对象完成...
2024-06-13 16:27:57,320 - root - INFO - 正在执行 preprocess() 函数...
2024-06-13 16:27:57,323 - root - INFO - 模式=unsupervised
2024-06-13 16:27:57,326 - root - INFO - 聚类方法=louvain
2024-06-13 16:27:57,328 - root - INFO - 分辨率=5.0
2024-06-13 16:27:57,331 - root - INFO - 批次键=BATCH
2024-06-13 16:27:57,333 - root - INFO - Normalize counts per cell(sum=10000.0)
2024-06-13 16:27:57,417 - root - INFO - Log1p data
2024-06-13 16:27:57,773 - root - INFO - Select HVG(n_top_genes=1000)
2024-06-13 16:27:59,485 - root - INFO - Scale batch(scale_value=10.0)
2024-06-13 16:28:00,291 - root - INFO - Calculate PCA(n_comps=100)
2024-06-13 16:28:24,514 - root - INFO - Apply louvain clustring(resolution=5.0) initization
2024-06-13 16:28:24,520 - root - INFO - Number of Cluster =41
2024-06-13 16:28:24,527 - root - INFO - clusters=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]
2024-06-13 16:28:24,532 - root - INFO - 预处理数据集完成。
2024-06-13 16:28:25,355 - root - INFO - mode=unsupervised
2024-06-13 16:28:25,428 - root - INFO - K_in=6, K_bw=12
2024-06-13 16:28:25,430 - root - INFO - 开始计算 KNN 和 MNN 以获取簇之间的相似性。
2024-06-13 16:28:25,431 - root - INFO - 使用近似方法计算每个批次内的 KNN 对...
2024-06-13 16:28:25,450 - root - INFO - Calculate KNN pair intra batch...........
2024-06-13 16:28:25,452 - root - INFO - K=6
2024-06-13 16:28:25,453 - root - INFO - metric=cosine
2024-06-13 16:28:25,454 - root - INFO - Processing datasets: (0, 0) = ('M1', 'M1')
2024-06-13 16:28:26,931 - root - INFO - There are (90642) KNN pairs when processing (0, 0)=('M1', 'M1')
2024-06-13 16:28:26,934 - root - INFO - Processing datasets: (1, 1) = ('M2', 'M2')
2024-06-13 16:28:28,313 - root - INFO - There are (85998) KNN pairs when processing (1, 1)=('M2', 'M2')
2024-06-13 16:28:28,315 - root - INFO - Processing datasets: (2, 2) = ('M3', 'M3')
2024-06-13 16:28:28,895 - root - INFO - There are (37754) KNN pairs when processing (2, 2)=('M3', 'M3')
2024-06-13 16:28:28,897 - root - INFO - Processing datasets: (3, 3) = ('M4', 'M4')
2024-06-13 16:28:29,469 - root - INFO - There are (39100) KNN pairs when processing (3, 3)=('M4', 'M4')
2024-06-13 16:28:29,471 - root - INFO - BDACL finds (253494) KNN pairs in dataset finally
2024-06-13 16:28:29,905 - root - INFO - 使用近似方法计算批次之间的 MNN 对...
2024-06-13 16:28:29,924 - root - INFO - Calculate MNN pair inter batch...........
2024-06-13 16:28:29,926 - root - INFO - K=12
2024-06-13 16:28:29,929 - root - INFO - metric=cosine
2024-06-13 16:28:29,930 - root - INFO - Processing datasets: (0, 1) = ('M1', 'M2')
2024-06-13 16:28:31,495 - root - INFO - There are (64910) MNN pairs when processing (0, 1)=('M1', 'M2')
2024-06-13 16:28:31,496 - root - INFO - Processing datasets: (0, 2) = ('M1', 'M3')
2024-06-13 16:28:32,619 - root - INFO - There are (51982) MNN pairs when processing (0, 2)=('M1', 'M3')
2024-06-13 16:28:32,620 - root - INFO - Processing datasets: (0, 3) = ('M1', 'M4')
2024-06-13 16:28:33,712 - root - INFO - There are (40936) MNN pairs when processing (0, 3)=('M1', 'M4')
2024-06-13 16:28:33,713 - root - INFO - Processing datasets: (1, 2) = ('M2', 'M3')
2024-06-13 16:28:34,799 - root - INFO - There are (48576) MNN pairs when processing (1, 2)=('M2', 'M3')
2024-06-13 16:28:34,801 - root - INFO - Processing datasets: (1, 3) = ('M2', 'M4')
2024-06-13 16:28:35,862 - root - INFO - There are (46526) MNN pairs when processing (1, 3)=('M2', 'M4')
2024-06-13 16:28:35,864 - root - INFO - Processing datasets: (2, 3) = ('M3', 'M4')
2024-06-13 16:28:36,489 - root - INFO - There are (31562) MNN pairs when processing (2, 3)=('M3', 'M4')
2024-06-13 16:28:36,490 - root - INFO - BDACL finds (284492) MNN pairs in dataset finally
2024-06-13 16:28:37,152 - root - INFO - 查找所有最近邻居完成。
2024-06-13 16:28:37,155 - root - INFO - 计算簇之间的相似性矩阵。
2024-06-13 16:28:37,422 - root - INFO - delete inner edge which link same cluster
2024-06-13 16:28:37,425 - root - INFO - 24576 knn pair in batch link different cluster
2024-06-13 16:28:37,680 - root - INFO - delete inner edge which link same cluster
2024-06-13 16:28:37,682 - root - INFO - 192924 mnn pair in batch link different cluster
2024-06-13 16:28:37,684 - root - INFO - ===================================================================================
2024-06-13 16:28:37,686 - root - INFO - NN pair ratio(number of MNN pairs/number of KNN pairs)=7.85009765625
2024-06-13 16:28:37,687 - root - INFO - ===================================================================================
2024-06-13 16:28:37,697 - root - INFO - 将相似性矩阵保存到文件中...
2024-06-13 16:28:37,705 - root - INFO - 将 nn 配对矩阵保存到文件中。
2024-06-13 16:28:37,711 - root - INFO - 完成相似性矩阵计算。
2024-06-13 16:28:37,806 - root - INFO - BDACL merge cluster with rule2....
2024-06-13 16:28:37,809 - root - INFO - merge_rule2....
2024-06-13 16:28:38,358 - root - INFO - merging cluster set:[{16}, {21}, {31}, {25, 36}, {10, 12}, {1, 3, 14, 15, 22, 29}, {38, 28, 6}, {17, 4, 9, 33}, {37, 5, 7, 40, 39, 18, 19}, {24, 8, 34, 11}, {0, 35, 13, 23, 26, 30}, {32, 2, 27, 20}]
2024-06-13 16:28:38,362 - root - INFO - 为BDACL培训构建嵌入网络
2024-06-13 16:28:38,372 - root - INFO - EmbeddingNet(
  (actn): ReLU()
  (fc): Sequential(
    (0): Linear(in_features=2000, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=32, bias=True)
  )
)
2024-06-13 16:28:38,375 - root - INFO - 构建嵌入网络完成…
2024-06-13 16:28:38,377 - root - INFO - train BDACL(expect_num_cluster=12) with Embedding Net
2024-06-13 16:28:38,380 - root - INFO - expect_num_cluster=12
2024-06-13 16:28:38,383 - root - INFO - 利用CPU训练模型
2024-06-13 16:28:38,387 - root - INFO - use euclidean distance and hard triplet to train model
2024-06-13 16:28:38,391 - root - INFO - not use earlystopping!!!!
2024-06-13 16:28:42,735 - root - INFO - epoch=1
2024-06-13 16:28:47,005 - root - INFO - epoch=2
2024-06-13 16:28:51,323 - root - INFO - epoch=3
2024-06-13 16:28:55,620 - root - INFO - epoch=4
2024-06-13 16:28:59,903 - root - INFO - epoch=5
2024-06-13 16:29:04,234 - root - INFO - epoch=6
2024-06-13 16:29:08,477 - root - INFO - epoch=7
2024-06-13 16:29:12,719 - root - INFO - epoch=8
2024-06-13 16:29:16,968 - root - INFO - epoch=9
2024-06-13 16:29:21,192 - root - INFO - epoch=10
2024-06-13 16:29:25,341 - root - INFO - epoch=11
2024-06-13 16:29:29,491 - root - INFO - epoch=12
2024-06-13 16:29:33,615 - root - INFO - epoch=13
2024-06-13 16:29:37,703 - root - INFO - epoch=14
2024-06-13 16:29:41,788 - root - INFO - epoch=15
2024-06-13 16:29:45,851 - root - INFO - epoch=16
2024-06-13 16:29:49,918 - root - INFO - epoch=17
2024-06-13 16:29:53,984 - root - INFO - epoch=18
2024-06-13 16:29:58,025 - root - INFO - epoch=19
2024-06-13 16:30:02,062 - root - INFO - epoch=20
2024-06-13 16:30:06,109 - root - INFO - epoch=21
2024-06-13 16:30:10,155 - root - INFO - epoch=22
2024-06-13 16:30:14,164 - root - INFO - epoch=23
2024-06-13 16:30:18,201 - root - INFO - epoch=24
2024-06-13 16:30:22,212 - root - INFO - epoch=25
2024-06-13 16:30:26,218 - root - INFO - epoch=26
2024-06-13 16:30:30,255 - root - INFO - epoch=27
2024-06-13 16:30:34,225 - root - INFO - epoch=28
2024-06-13 16:30:38,204 - root - INFO - epoch=29
2024-06-13 16:30:42,246 - root - INFO - epoch=30
2024-06-13 16:30:46,255 - root - INFO - epoch=31
2024-06-13 16:30:50,292 - root - INFO - epoch=32
2024-06-13 16:30:54,296 - root - INFO - epoch=33
2024-06-13 16:30:58,312 - root - INFO - epoch=34
2024-06-13 16:31:02,319 - root - INFO - epoch=35
2024-06-13 16:31:06,286 - root - INFO - epoch=36
2024-06-13 16:31:10,289 - root - INFO - epoch=37
2024-06-13 16:31:14,254 - root - INFO - epoch=38
2024-06-13 16:31:18,178 - root - INFO - epoch=39
2024-06-13 16:31:22,144 - root - INFO - epoch=40
2024-06-13 16:31:26,163 - root - INFO - epoch=41
2024-06-13 16:31:30,121 - root - INFO - epoch=42
2024-06-13 16:31:34,102 - root - INFO - epoch=43
2024-06-13 16:31:38,092 - root - INFO - epoch=44
2024-06-13 16:31:42,018 - root - INFO - epoch=45
2024-06-13 16:31:45,966 - root - INFO - epoch=46
2024-06-13 16:31:49,930 - root - INFO - epoch=47
2024-06-13 16:31:53,905 - root - INFO - epoch=48
2024-06-13 16:31:57,884 - root - INFO - epoch=49
2024-06-13 16:32:01,862 - root - INFO - epoch=50
2024-06-13 16:32:05,856 - root - INFO - epoch=51
2024-06-13 16:32:09,836 - root - INFO - epoch=52
2024-06-13 16:32:13,818 - root - INFO - epoch=53
2024-06-13 16:32:17,747 - root - INFO - epoch=54
2024-06-13 16:32:21,676 - root - INFO - epoch=55
2024-06-13 16:32:25,635 - root - INFO - epoch=56
2024-06-13 16:32:29,591 - root - INFO - epoch=57
2024-06-13 16:32:33,550 - root - INFO - epoch=58
2024-06-13 16:32:37,528 - root - INFO - epoch=59
2024-06-13 16:32:41,495 - root - INFO - epoch=60
2024-06-13 16:32:45,438 - root - INFO - epoch=61
2024-06-13 16:32:49,403 - root - INFO - epoch=62
2024-06-13 16:32:53,340 - root - INFO - epoch=63
2024-06-13 16:32:57,265 - root - INFO - epoch=64
2024-06-13 16:33:01,200 - root - INFO - epoch=65
2024-06-13 16:33:05,120 - root - INFO - epoch=66
2024-06-13 16:33:09,039 - root - INFO - epoch=67
2024-06-13 16:33:12,998 - root - INFO - epoch=68
2024-06-13 16:33:16,916 - root - INFO - epoch=69
2024-06-13 16:33:20,837 - root - INFO - epoch=70
2024-06-13 16:33:24,786 - root - INFO - epoch=71
2024-06-13 16:33:28,706 - root - INFO - epoch=72
2024-06-13 16:33:32,620 - root - INFO - epoch=73
2024-06-13 16:33:36,620 - root - INFO - epoch=74
2024-06-13 16:33:40,631 - root - INFO - epoch=75
2024-06-13 16:33:44,545 - root - INFO - epoch=76
2024-06-13 16:33:48,476 - root - INFO - epoch=77
2024-06-13 16:33:52,426 - root - INFO - epoch=78
2024-06-13 16:33:56,353 - root - INFO - epoch=79
2024-06-13 16:34:00,276 - root - INFO - epoch=80
2024-06-13 16:34:04,238 - root - INFO - epoch=81
2024-06-13 16:34:08,511 - root - INFO - epoch=82
2024-06-13 16:34:12,521 - root - INFO - epoch=83
2024-06-13 16:34:16,521 - root - INFO - epoch=84
2024-06-13 16:34:20,496 - root - INFO - epoch=85
2024-06-13 16:34:24,500 - root - INFO - epoch=86
2024-06-13 16:34:28,515 - root - INFO - epoch=87
2024-06-13 16:34:32,501 - root - INFO - epoch=88
2024-06-13 16:34:36,468 - root - INFO - epoch=89
2024-06-13 16:34:40,414 - root - INFO - epoch=90
2024-06-13 16:34:44,377 - root - INFO - epoch=91
2024-06-13 16:34:48,299 - root - INFO - epoch=92
2024-06-13 16:34:52,293 - root - INFO - epoch=93
2024-06-13 16:34:56,275 - root - INFO - epoch=94
2024-06-13 16:35:00,277 - root - INFO - epoch=95
2024-06-13 16:35:04,283 - root - INFO - epoch=96
2024-06-13 16:35:08,294 - root - INFO - epoch=97
2024-06-13 16:35:12,369 - root - INFO - epoch=98
2024-06-13 16:35:16,372 - root - INFO - epoch=99
2024-06-13 16:35:20,387 - root - INFO - epoch=100
2024-06-13 16:35:20,390 - root - INFO - BDACL training done....
2024-06-13 16:35:20,392 - root - INFO - extract embedding for dataset with trained network
2024-06-13 16:35:48,054 - root - INFO - K_in=5, K_bw=10
2024-06-13 16:35:48,056 - root - INFO - 开始计算 KNN 和 MNN 以获取簇之间的相似性。
2024-06-13 16:35:48,058 - root - INFO - 使用近似方法计算每个批次内的 KNN 对...
2024-06-13 16:35:48,077 - root - INFO - Calculate KNN pair intra batch...........
2024-06-13 16:35:48,079 - root - INFO - K=5
2024-06-13 16:35:48,081 - root - INFO - metric=cosine
2024-06-13 16:35:48,084 - root - INFO - Processing datasets: (0, 0) = ('M1', 'M1')
2024-06-13 16:35:49,581 - root - INFO - There are (73198) KNN pairs when processing (0, 0)=('M1', 'M1')
2024-06-13 16:35:49,583 - root - INFO - Processing datasets: (1, 1) = ('M2', 'M2')
2024-06-13 16:35:50,959 - root - INFO - There are (69436) KNN pairs when processing (1, 1)=('M2', 'M2')
2024-06-13 16:35:50,961 - root - INFO - Processing datasets: (2, 2) = ('M3', 'M3')
2024-06-13 16:35:51,523 - root - INFO - There are (30476) KNN pairs when processing (2, 2)=('M3', 'M3')
2024-06-13 16:35:51,525 - root - INFO - Processing datasets: (3, 3) = ('M4', 'M4')
2024-06-13 16:35:52,080 - root - INFO - There are (31610) KNN pairs when processing (3, 3)=('M4', 'M4')
2024-06-13 16:35:52,082 - root - INFO - BDACL finds (204720) KNN pairs in dataset finally
2024-06-13 16:35:52,488 - root - INFO - 使用近似方法计算批次之间的 MNN 对...
2024-06-13 16:35:52,507 - root - INFO - Calculate MNN pair inter batch...........
2024-06-13 16:35:52,510 - root - INFO - K=10
2024-06-13 16:35:52,511 - root - INFO - metric=cosine
2024-06-13 16:35:52,513 - root - INFO - Processing datasets: (0, 1) = ('M1', 'M2')
2024-06-13 16:35:54,071 - root - INFO - There are (52036) MNN pairs when processing (0, 1)=('M1', 'M2')
2024-06-13 16:35:54,072 - root - INFO - Processing datasets: (0, 2) = ('M1', 'M3')
2024-06-13 16:35:55,163 - root - INFO - There are (41936) MNN pairs when processing (0, 2)=('M1', 'M3')
2024-06-13 16:35:55,165 - root - INFO - Processing datasets: (0, 3) = ('M1', 'M4')
2024-06-13 16:35:56,227 - root - INFO - There are (32876) MNN pairs when processing (0, 3)=('M1', 'M4')
2024-06-13 16:35:56,229 - root - INFO - Processing datasets: (1, 2) = ('M2', 'M3')
2024-06-13 16:35:57,289 - root - INFO - There are (39086) MNN pairs when processing (1, 2)=('M2', 'M3')
2024-06-13 16:35:57,291 - root - INFO - Processing datasets: (1, 3) = ('M2', 'M4')
2024-06-13 16:35:58,329 - root - INFO - There are (37338) MNN pairs when processing (1, 3)=('M2', 'M4')
2024-06-13 16:35:58,330 - root - INFO - Processing datasets: (2, 3) = ('M3', 'M4')
2024-06-13 16:35:58,940 - root - INFO - There are (25288) MNN pairs when processing (2, 3)=('M3', 'M4')
2024-06-13 16:35:58,942 - root - INFO - BDACL finds (228560) MNN pairs in dataset finally
2024-06-13 16:35:59,346 - root - INFO - 查找所有最近邻居完成。
2024-06-13 16:35:59,349 - root - INFO - 计算簇之间的相似性矩阵。
2024-06-13 16:35:59,604 - root - INFO - delete inner edge which link same cluster
2024-06-13 16:35:59,607 - root - INFO - 19572 knn pair in batch link different cluster
2024-06-13 16:35:59,845 - root - INFO - delete inner edge which link same cluster
2024-06-13 16:35:59,847 - root - INFO - 154856 mnn pair in batch link different cluster
2024-06-13 16:35:59,850 - root - INFO - ===================================================================================
2024-06-13 16:35:59,853 - root - INFO - NN pair ratio(number of MNN pairs/number of KNN pairs)=7.91211935417944
2024-06-13 16:35:59,855 - root - INFO - ===================================================================================
2024-06-13 16:35:59,864 - root - INFO - 将相似性矩阵保存到文件中...
2024-06-13 16:35:59,871 - root - INFO - 将 nn 配对矩阵保存到文件中。
2024-06-13 16:35:59,875 - root - INFO - 完成相似性矩阵计算。
